{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","components/Items/Items.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","React","memo","total","perPage","currentPage","onPageChange","pageLinkArr","Math","ceil","className","cn","disabled","href","onClick","map","link","active","length","Items","visibleItems","item","items","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","pageFrom","pageTo","id","defaultValue","onChange","e","target","value","htmlFor","page","itemFrom","splice","ReactDOM","render","document","getElementById"],"mappings":"2NAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA8BC,IAAMC,MAAK,YAK/C,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAcb,EAAW,EAAGc,KAAKC,KAAKN,EAAQC,IAEpD,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBP,IAA3C,SACE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBR,EACfS,QAAS,kBAAMR,EAAaD,EAAc,IAL5C,oBAUDE,EAAYQ,KAAI,SAAAC,GAAI,OACnB,oBAEEN,UAAWC,IAAG,YAAa,CAAEM,OAAQD,IAASX,IAFhD,SAIE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMR,EAAaU,IAJ9B,SAMGA,KATEA,MAaT,oBAAIN,UAAWC,IACb,YAAa,CAAEC,SAAUP,IAAgBE,EAAYW,SADvD,SAIE,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAK,QACL,gBAAeR,IAAgBE,EAAYW,OAC3CJ,QAAS,kBAAMR,EAAaD,EAAc,IAL5C,0BC7CKc,EAAyBlB,IAAMC,MAAK,gBAC/CkB,EAD+C,EAC/CA,aAD+C,OAG/C,6BACGA,EAAaL,KAAI,SAAAM,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,WCJxBC,EAAQ5B,EAAW,EAAG,IACzBqB,KAAI,SAAAjB,GAAC,qBAAYA,MAEPyB,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOnB,EAAP,KAAoBsB,EAApB,KACMC,GAAYvB,EAAc,GAAKoB,EAAe,EAC9CI,EAASD,EAAWH,EAAe,EAAI,GACzCH,EAAMJ,OACNU,EAAWH,EAAe,EAwB9B,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EADX,mBACiCuB,EADjC,cAC+CC,EAD/C,eAC4DP,EAAMJ,OADlE,OAIA,sBAAKR,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,aAAcN,EACdO,SAAU,SAACC,GAnBnBP,GAoB2BO,EApBJC,OAAOC,OAC9BR,EAAe,IAaT,UASE,wBAAQQ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAIF,cAACV,EAAD,CACEG,MAAOmB,EAAMJ,OACbd,QAASqB,EACTpB,YAAaA,EACbC,aAxDe,SAAC+B,GAElBA,IAAShC,GACNgC,GAAQ,GACRA,GAAQ7B,KAAKC,KAAKa,EAAMJ,OAASO,IAEpCE,EAAeU,MAoDf,cAAClB,EAAD,CAAOC,aAhDU,WACnB,IAAMkB,EAAWb,GAAgBpB,EAAc,GAG/C,OAFc,YAAOiB,GAELiB,OAAOD,EAAUb,GA4CVL,SCzE3BoB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.59f52e15.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = React.memo(({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageLinkArr = getNumbers(1, Math.ceil(total / perPage));\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {pageLinkArr.map(link => (\n        <li\n          key={link}\n          className={cn('page-item', { active: link === currentPage })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${link}`}\n            onClick={() => onPageChange(link)}\n          >\n            {link}\n          </a>\n        </li>\n      ))}\n      <li className={cn(\n        'page-item', { disabled: currentPage === pageLinkArr.length },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pageLinkArr.length}\n          onClick={() => onPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n});\n","import React from 'react';\n\ntype Props = {\n  visibleItems: Array<string>\n};\n\nexport const Items: React.FC<Props> = React.memo(({\n  visibleItems,\n}) => (\n  <ul>\n    {visibleItems.map(item => (\n      <li data-cy=\"item\" key={item}>{item}</li>\n    ))}\n  </ul>\n));\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\nimport { Items } from './components/Items';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const pageFrom = (currentPage - 1) * itemsPerPage + 1;\n  const pageTo = pageFrom + itemsPerPage - 1 > 42\n    ? items.length\n    : pageFrom + itemsPerPage - 1;\n\n  const onPageChange = (page: number) => {\n    if (\n      page !== currentPage\n      && page >= 1\n      && page <= Math.ceil(items.length / itemsPerPage)\n    ) {\n      setCurrentPage(page);\n    }\n  };\n\n  const visibleItems = () => {\n    const itemFrom = itemsPerPage * (currentPage - 1);\n    const itemCopy = [...items];\n\n    return itemCopy.splice(itemFrom, itemsPerPage);\n  };\n\n  const handlePageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${pageFrom} - ${pageTo} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={itemsPerPage}\n            onChange={(e) => {\n              handlePageChange(e);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n      <Items visibleItems={visibleItems()} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}